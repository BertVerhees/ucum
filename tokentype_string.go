// Code generated by "enumer -type=TokenType"; DO NOT EDIT

package ucum

import (
	"fmt"
)

const _TokenType_name = "NONENUMBERSYMBOLSOLIDUSPERIODOPENCLOSEANNOTATION"

var _TokenType_index = [...]uint8{0, 4, 10, 16, 23, 29, 33, 38, 48}

func (i TokenType) String() string {
	i -= 1
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return fmt.Sprintf("TokenType(%d)", i+1)
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}

var _TokenTypeNameToValue_map = map[string]TokenType{
	_TokenType_name[0:4]:   1,
	_TokenType_name[4:10]:  2,
	_TokenType_name[10:16]: 3,
	_TokenType_name[16:23]: 4,
	_TokenType_name[23:29]: 5,
	_TokenType_name[29:33]: 6,
	_TokenType_name[33:38]: 7,
	_TokenType_name[38:48]: 8,
}

func TokenTypeString(s string) (TokenType, error) {
	if val, ok := _TokenTypeNameToValue_map[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to TokenType values", s)
}
